// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Role {
  id    Int    @id @default(autoincrement())
  name  String @unique
  users User[]
}

model User {
  id       Int    @id @default(autoincrement())
  name     String
  email    String @unique
  password String
  roleId   Int

  role Role @relation(fields: [roleId], references: [id])
}

model Product {
  id            Int     @id @default(autoincrement())
  name          String
  description   String?
  salePrice     Decimal @db.Money
  purchasePrice Decimal @db.Money
  stockQuantity Int
  categoryId    Int

  category     Category          @relation(fields: [categoryId], references: [id])
  suppliers    ProductSupplier[]
  purchaseItem PurchaseItem[]
  saleItem     SaleItem[]
}

model Category {
  id          Int     @id @default(autoincrement())
  name        String
  description String?

  products Product[]
}

model Supplier {
  id          Int     @id @default(autoincrement())
  name        String
  contactInfo String?

  products ProductSupplier[]
  purchase Purchase[]
}

model ProductSupplier {
  product   Product @relation(fields: [productId], references: [id])
  productId Int

  supplier   Supplier @relation(fields: [supplierId], references: [id])
  supplierId Int

  @@id([productId, supplierId])
}

model Purchase {
  id           Int      @id @default(autoincrement())
  purchaseDate DateTime @default(now())
  total        Decimal  @db.Money
  status       String
  supplierId   Int

  supplier      Supplier       @relation(fields: [supplierId], references: [id])
  purchaseItems PurchaseItem[]
}

model PurchaseItem {
  id         Int     @id @default(autoincrement())
  quantity   Int
  price      Decimal @db.Money
  productId  Int
  purchaseId Int

  product  Product  @relation(fields: [productId], references: [id])
  purchase Purchase @relation(fields: [purchaseId], references: [id])
}

model Sale {
  id           Int        @id @default(autoincrement())
  saleDate     DateTime   @default(now())
  total        Decimal    @db.Money
  status       String
  saleItems    SaleItem[]
  customerName String?
  customerDNI  String?

  delivery   Delivery? @relation(fields: [deliveryId], references: [id])
  deliveryId Int?      @unique
}

model SaleItem {
  id        Int     @id @default(autoincrement())
  quantity  Int
  price     Decimal @db.Money
  productId Int
  saleId    Int

  product Product @relation(fields: [productId], references: [id])
  sale    Sale    @relation(fields: [saleId], references: [id])
}

model Delivery {
  id           Int      @id @default(autoincrement())
  deliveryDate DateTime
  status       String

  sale Sale?
}
